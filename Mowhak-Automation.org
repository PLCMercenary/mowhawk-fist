#+STARTUP: content
#+AUTHOR: Sean Terrell 
#+HUGO_BASE_DIR: .
#+HUGO_AUTO_SET_LASTMOD: t
#+seq_todo: TODO DRAFT DONE
#+Tags: Post(p) IIoT(i) sensors(s) Hardware(h) Programming(P) Protocols(c) automation(a) Scada(s) DN(d) TODO(T) Noexport(n)
* Pages
  :PROPERTIES:
  :EXPORT_HUGO_CUSTOM_FRONT_MATTER: :noauthor true :nocomment true :nodate true :nopaging true :noread true
  :EXPORT_HUGO_MENU: :menu main
  :EXPORT_HUGO_SECTION: 
  :EXPORT_HUGO_WEIGHT: auto
  :VISIBILITY: children
  :END:
** DONE About Us
CLOSED: [2019-08-01 Thu 04:32]
   :PROPERTIES:
   :EXPORT_FILE_NAME: About Us
   :END:
   
Automation Mercs is an information sharing site started by *Sean "Scooter"
Terrell* an automation geek that is obsessed with PLC Controls and Automating
everything possible 

*Justin Dean* is a lifelong programming expert with experience in all types of
SCADA systems, large and small. His experience with all manner of automation
equipment along with a specific expertise in .Net, and Java frameworks are
somewhat unique to this industry at the time of this writing.

it is the goal of this simple blog and podcast to bring relevant how-to
information and, thought or discussion promoting topics - Community posts
and guest articles or video series are highly welcomed 

Please Email 

 =Merc@automationmerc.com=

Most of the inspiration these articles & videos come from the automation
community on linkedin and will also be linked there as well. 
** Contact
   :PROPERTIES:
   :CUSTOM_ID: h:beb0969b-5168-490b-95ef-af55818703e5
   :CREATED:  [2019-07-28 Sun 20:35]
   :EXPORT_FILE_NAME: Contacts
   :END:

The Best way to contact someone is to email the 

 =Merc@AutomationMerc.com=

The Mercenaries are also easily reached on LinkedIn 

**Justin Dean** - SCADA Solution Magician [[https://www.linkedin.com/in/justin-dean-95532b18/][LinkedIN]]
                
**Scooter Terrell** - /the PLC Mercenary/, mostly breaks things, [[https://www.linkedin.com/in/sean-terrell-1837a312/][LinkedIN]]


	 

* Post
:PROPERTIES:
:EXPORT_HUGO_SECTION: post 
:VISIBILITY: children 
:END:
** MQTT                                                              :MQTT:SCADA:Industry 4.0:
:PROPERTIES:
:ID:       9e986908-1ded-427e-b34a-203d7cc2086e
:CREATED:  [2020-06-29 Mon 13:27]
:END:
*** DONE MQTT: I heard its over-rated                               :SCADA:IIoT:Comms:network:
CLOSED: [2020-06-29 Mon 07:32]
:PROPERTIES:
:EXPORT_FILE_NAME: mqtt-i-heard-its-over-rated
:END:
*Appaently the first rule of MQTT is we dont talk about MQTT* 

Sure, its all over LinkedIN. Its the first thing anyone mentions in a conversation about IoT or the future of automation. But what the hell is it?

*Message Queing Telemetry Transport* - the words MQTT is supposed to represent dont mean a whole helluvlot to me. Messages are pretty standard communications between .. fucking anything. And Queing sounds like there is either a time slot to transmit which means asyncronus data out and that blows, or that the state of the connection can hold message delivery in a que.. and that would be ok.

*MQ Telemetry Transport* Ok so we know that Message Queing is happening and *Telemetry* ok thats sensor data. Now we are getting into an automation monkey's wheel house. Telemetry almost always refers to sensors and devices sending reporting data. Often times Telemetry is commutated values packed into a very tiny message and booted out in a single frame called fire and forget... just hoping that the receiver catches the message. And of course transport means this data can be shipped on multiple network types as the transport layer abstracts from the actual transmission layer of most protocols.




  
** TODO PLC Programming                                             :@PLC:todo:

* Blog Ideas                                                          :Noexport:
:PROPERTIES:
:ID:       C41B5F9F-B8EB-460B-87FF-6B647CB72752
:VISIBILITY: children
:END:
** Interview with mama - IVF and Barbados
   - 



* Footnotes 
* COMMENT Local Variables                                           # Local Variables:
# eval: (org-hugo-auto-export-mode) 
# eval: (add-hook 'after-save-hook #'org-hugo-export-wim-to-md-after-save :append :local)
# eval: (auto-fill-mode 1)
# End:
